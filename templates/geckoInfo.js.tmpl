/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

"use strict";

exports.addonName = {{ basename|json }};
exports.addonVersion = {{ version|json }};

exports.application = "unknown";
exports.applicationVersion = "0";

exports.platform = "gecko";
exports.platformVersion = "0";

let match = /\brv:(\d+(?:\.\d+)?)\b/.exec(navigator.userAgent);
if (match)
  exports.platformVersion = match[1];

// Firefox 50 does not support runtime.getBrowserInfo
if ("getBrowserInfo" in browser.runtime)
{
  browser.runtime.getBrowserInfo().then(browserInfo =>
  {
    exports.application = browserInfo.name.toLowerCase();
    exports.applicationVersion = browserInfo.version;
  });
}
else
{
  let browserInfo = /\bFirefox\/(\S+)/.exec(navigator.userAgent);
  exports.application = "firefox";
  if (browserInfo)
    exports.applicationVersion = browserInfo[1];
}
